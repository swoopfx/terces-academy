<?php
$this->headtitle("Upload Video");

?>
<div id="upd">
    <div class="row">
        <div class="col-lg-6">
            <h3 class="tx-inverse mg-b-15">Upload Video to cohort</h3>
            <!-- <p class="mg-b-40">Phasellus viverra nulla ut metus varius laoreet. Quisque rutrum. Aenean imperdiet. Etiam ultricies nisi vel augue. Curabitur ullamcorper ultricies nisi. Nam eget dui. Etiam rhoncus.</p> -->

            <h6 class="slim-card-title mg-b-15">Your Earning Summary</h6>
            <div class="row no-gutters">
                <div class="col-sm-6">
                    <div class="card card-earning-summary">
                        <h6>ToTal Registered</h6>
                        <h1>{{totalInternRegistered}}</h1>

                    </div><!-- card -->
                </div><!-- col-6 -->
                <div class="col-sm-6">
                    <div class="card card-earning-summary mg-sm-l--1 bd-t-0 bd-sm-t">
                        <h6>Active Cohort</h6>
                        <h1>{{totalActiveIntern}}</h1>

                    </div><!-- card -->
                </div><!-- col-6 -->
            </div><!-- row -->
        </div><!-- col-6 -->
        <div class="col-lg-6 mg-t-20 mg-sm-t-30 mg-lg-t-0">
            <div class="card">
                <div class="card-body pd-30">
                    <h6 class="slim-card-title">Upload Video</h6>


                    <div class="form-group">
                        <div class="row row-sm">
                            <div class="col-sm">
                                <label for="titles">Video Title:</label>
                                <input type="text" name="titles" v-model="titles" class="form-control" placeholder="Video Title">
                            </div><!-- col -->
                            <div class="col-sm mg-t-20 mg-sm-t-0">
                                <label for="cohort">Choose a Cohort:</label>
                                <select name="cohort" class="form-control" v-model="selectedCohort" v-if="cohort.length">

                                    <option v-for="co in cohort" :value="co.id">{{co.cohort}}</option>
                                </select>
                            </div><!-- col -->
                        </div><!-- row -->
                    </div><!-- form-group -->
                    <div class="form-group">
                        <textarea v-model="vdesc" class="form-control" rows="3" placeholder="Provide a quick description for the video"></textarea>
                    </div><!-- form-group -->
                    <div class="form-group">
                        <div class="row row-sm">
                            <div class="col-sm">
                                <div class="custom-file">
                                    <input ref="vFile" type="file" accept=".mp4,.mov,.avi" class="custom-file-input" id="customFile2">
                                    <label class="custom-file-label custom-file-label-primary" for="customFile">Choose file</label>
                                </div><!-- custom-file -->
                            </div><!-- col -->

                        </div><!-- row -->
                    </div><!-- form-group -->
                    <div v-if="isSubmitting">
                        <div class="d-flex bg-gray-200 ht-50 pos-relative align-items-center">
                            <div class="sk-folding-cube">
                                <div class="sk-cube1 sk-cube"></div>
                                <div class="sk-cube2 sk-cube"></div>
                                <div class="sk-cube4 sk-cube"></div>
                                <div class="sk-cube3 sk-cube"></div>
                            </div>
                        </div><!-- d-flex -->
                    </div>
                    <div v-else>
                        <button @click="createVideo()" class="btn btn-primary pd-x-20">Submit</button>
                        <button class="btn btn-secondary pd-x-20">Cancel</button>
                    </div>

                </div><!-- card-body -->
            </div><!-- card -->
        </div><!-- col-6 -->
    </div><!-- row -->



    <div class="card card-table mg-t-20 mg-sm-t-30">
        <div class="card-header">
            <h6 class="slim-card-title">Product Purchases</h6>
            <nav class="nav">
                <a href="" class="nav-link active">Today</a>
                <a href="" class="nav-link">This Week</a>
                <a href="" class="nav-link">This Month</a>
            </nav>
        </div><!-- card-header -->
        <div class="table-responsive">
            <table class="table mg-b-0 tx-13">
                <thead>
                    <tr class="tx-10">
                       
                        <th class="pd-y-5">Item Details</th>
                        <th class="pd-y-5 tx-right">Sold</th>
                        <th class="pd-y-5 tx-center">Location</th>
                        <th class="pd-y-5">Gain</th>
                        <th class="pd-y-5 tx-right">Added</th>
                        <th class="pd-y-5 tx-right">Updated</th>
                        <th class="pd-y-5 tx-center">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <tr v-for="vi in recentVideos">
                       
                        <td>
                            <a href="" class="tx-inverse tx-medium d-block">{{vi.titles}}</a>
                            <span class="tx-12 d-block"><span class="square-8 bg-danger mg-r-5 rounded-circle"></span> 20 remaining</span>
                        </td>
                        <td class="valign-middle tx-right">3,345</td>
                        <td class="valign-middle tx-center"><span class="flag-icon flag-icon-ph tx-16"></span></td>
                        <td class="valign-middle"><span class="tx-success"><i class="icon ion-android-arrow-up mg-r-5"></i>33.34%</span> from last week</td>
                        <td class="valign-middle tx-right">10/21/2017</td>
                        <td class="valign-middle tx-right">an hour ago</td>
                        <td class="valign-middle tx-center">
                            <a href="" class="tx-gray-600 tx-24"><i class="icon ion-android-more-horizontal"></i></a>
                        </td>
                    </tr>
                  
                </tbody>
            </table>
        </div><!-- table-responsive -->
        <div class="card-footer tx-12 pd-y-15 bg-transparent">
            <a href=""><i class="fa fa-angle-down mg-r-5"></i>View All Products</a>
        </div><!-- card-footer -->
    </div><!-- card -->
</div>
<script>
    const uploadVideoApp = Vue.createApp({
        data() {
            return {
                uploadedVideos: [],
                titles: "",
                vdesc: "",
                cohort: [],
                selectedCohort: "",
                noFiles: true,
                totalInternRegistered: 0,
                totalActiveIntern: 0,
                recentVideos: [],
                isSubmitting: false,
            }
        },

        mounted() {
            this.getCohort();
            this.getRecentVideo();
        },

        methods: {
            getCohort() {
                axios.get("/get-internship-cohort").then((result) => {
                    if (result.status == 200) {
                        this.cohort = result.data.data;
                    }
                }).catch((err) => {

                });
            },
            totalRegistered() {
                axios.get("/admins/admin-intern/total-registered").then((result) => {
                    if (result.status == 200) {
                        this.totalInternRegistered = result.data.total;
                    }
                }).catch((err) => {

                });
            },

            totalActive() {
                axios.get("/admins/admin-intern/total-active").then((result) => {
                    if (result.status == 200) {
                        this.totalActiveIntern = result.data.total;
                    }
                }).catch((err) => {

                });
            },

            getRecentVideo() {
                axios.get("/admins/admin-intern/get-recent-video").then((result) => {
                    if (result.status == 200) {
                        this.recentVideos = result.data.data;
                    }
                }).catch((err) => {

                });
            },

            createVideo() {
                this.isSubmitting = true;
                if (this.noFiles = !this.$refs.vFile.files.length) {
                    this.$toast.open({
                        message: "A required file is empty please check and upload required document",
                        type: "error",
                        position: "top-right",
                        duration: 2000,
                        dismissible: true
                    })
                    this.isSubmitting = false;
                } else if (this.titles == "" || this.vdesc == "" || this.selectedCohort == "") {
                    this.$toast.open({
                        message: "A required field is empty",
                        type: "error",
                        position: "top-right",
                        duration: 2000,
                        dismissible: true
                    })
                    this.isSubmitting = false
                } else {
                    let formData = new FormData();
                    formData.append("title", this.titles);
                    formData.append("descs", this.vdesc);
                    formData.append("cohort", this.selectedCohort);
                    formData.append("video", this.$refs.vFile.files[0])
                    axios.post("/admins/admin-intern/upload-video", formData, {
                        headers: {
                            "Content-Type": "multipart/form-data"
                        }
                    }).then((result) => {
                        if (result.status == 201) {
                            window.location.reload();
                        }
                        this.isSubmitting = false;

                    }).catch((err) => {
                        Swal.fire({
                            icon: "error",
                            title: "An error occured",
                            text: err.response.data.message,
                        });
                        this.isSubmitting = false;
                    });
                }
            }
        },
    });
    uploadVideoApp.use(VueToast.ToastPlugin);
    uploadVideoApp.mount("#upd");
</script>