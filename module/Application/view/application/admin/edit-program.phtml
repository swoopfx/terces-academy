<?php echo $this->headtitle("Edit Program"); ?>

<div id="editProgram">
    <input ref="programId" type="hidden" value="<?= $data->getId() ?>">
    <div class="row">
        <div class="col-lg-6">
            <h3 class="tx-inverse mg-b-15"><?= $data->getTitle() ?></h3>
            <p class="mg-b-40"><?= $data->getDescription() ?></p>



        </div><!-- col-6 -->
        <div class="col-lg-6 mg-t-20 mg-sm-t-30 mg-lg-t-0">
            <div class="card card-dash-headline">


                <div class="row row-sm">
                    <div class="col-sm-6">
                        <a href="" class="btn btn-primary btn-block">Account Settings</a>
                    </div><!-- col-6 -->
                    <div class="col-sm-6 mg-t-10 mg-sm-t-0">
                        <a href="" class="btn btn-danger btn-block">Remove Program</a>
                    </div><!-- col-6 -->
                </div><!-- row -->
            </div><!-- card -->
        </div><!-- col-6 -->
    </div><!-- row -->
    <hr>
    <div class="row row-xs mg-t-10">
        <div class="col-lg-6">
            <div class="card card-table">
                <div class="card-header">
                    <h6 class="slim-card-title">Program Courses</h6>
                </div><!-- card-header -->
                <div class="table-responsive">
                    <table class="table mg-b-0 tx-13">
                        <thead>
                            <tr class="tx-10">
                                <th>ID</th>
                                <th class="wd-10p pd-y-5">&nbsp;</th>
                                <th class="pd-y-5">Course Details</th>
                                <th class="pd-y-10"></th>
                            </tr>
                        </thead>
                        <tbody>
                            <?php foreach ($data->getCourses() as $key => $course) : ?>
                            <tr>
                                <td><?= $course->getArrange() ?></td>
                                <td class="pd-l-20">
                                    <img src="<?= $course->getBanner()->getImageUrl() ?>" class="wd-36 rounded-circle"
                                        alt="Image">
                                </td>
                                <td>
                                    <a href="" class="tx-inverse tx-14 tx-medium d-block"><?= $course->getTitle() ?></a>
                                    <span class="tx-11 d-block">UUID: <?= strtoupper($course->getUuid()) ?></span><br>
                                    <button @click="getCResourse('<?= $course->getId() ?>')" data-toggle="modal"
                                        data-target="#addCourseResources" class="btn btn-primary btn-sm">Add
                                        Resources</button>

                                </td>

                                <td>
                                    <div class="row">
                                        <button @click="getCourseContent('<?= $course->getId() ?>')"
                                            class="btn btn-success btn-sm"><i class="fa fa-eye"></i></button>
                                        <button @click=" removeCourse('<?= $course->getId() ?>')"
                                            class="btn btn-danger btn-sm"><i class="fa fa-trash"></i></button>
                                        <button @click="editCourse('<?= $course->getId() ?>')" ref="editContentButton"
                                            data-toggle="modal" data-target="#modalEditCourse"
                                            class="btn btn-sm btn-warning"> <i class="fa fa-edit"></i>
                                        </button>
                                    </div>
                                    <div class="row">
                                        <button @click="newQuiz('<?= $course->getId() ?>')" data-toggle="modal"
                                            data-target="#modalQuiz" class="btn btn-sm btn-primary">
                                            <i class="fa fa-plus"></i></button>

                                    </div>
                                </td>
                            </tr>
                            <?php endforeach ?>

                        </tbody>
                    </table>
                </div><!-- table-responsive -->
                <div class="card-footer tx-12 pd-y-15 bg-transparent">
                    <button data-toggle="modal" data-target="#modalCreateCourse" class="btn btn-sm btn-warning"><i
                            class="fa fa-angle-down mg-r-5"></i>Create Course</a>
                </div><!-- card-footer -->


                <!-- Begin Modal for create Course -->

                <div id="modalCreateCourse" class="modal fade">
                    <div class="modal-dialog modal-dialog-vertical-center" role="document">
                        <div class="modal-content bd-0 tx-14">
                            <div class="modal-header">
                                <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold">Message Preview</h6>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body pd-25">
                                <div class="row">
                                    <div class="col-lg">
                                        <label>Course ID:</label>
                                        <input ref="courseId" class="form-control" placeholder="21" type="text">
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg">
                                        <label>Course Title:</label>
                                        <input ref="courseTitle" class="form-control" placeholder="Intro To businesss"
                                            type="text">
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg mg-t-10 mg-lg-t-0">
                                        <label>Course Description : </label>
                                        <textarea ref="courseDescription" class="form-control"></textarea>
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg mg-t-10 mg-lg-t-0">
                                        <div class="custom-file">
                                            <input type="file" ref="courseBanner" class="custom-file-input"
                                                id="customFile">
                                            <label class="custom-file-label" for="customFile">Upload Banner</label>
                                        </div><!-- custom-file -->
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg mg-t-10 mg-lg-t-0">
                                        <label>Video Link :</label>
                                        <input ref="courseVideo" class="form-control" placeholder="Intro To businesss"
                                            type="text">
                                    </div><!-- col -->
                                </div><!-- row -->
                            </div>
                            <div class="modal-footer">
                                <button @click="createCourse()" type="button" class="btn btn-primary">Create</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div><!-- modal-dialog -->
                </div><!-- modal -->

                <!-- End Modal for create Course -->


                <!-- Begin Modal for Edit Course -->

                <div id="modalEditCourse" class="modal fade">
                    <div class="modal-dialog modal-dialog-vertical-center" role="document">
                        <div class="modal-content bd-0 tx-14">
                            <div class="modal-header">
                                <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold">Edit Course</h6>
                                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                            <div class="modal-body pd-25">

                                <div class="row">
                                    <div class="col-lg">
                                        <label>Edit ID:</label>
                                        <input ref="editCourseId" class="form-control" placeholder="Intro To businesss"
                                            type="text">
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg">
                                        <label>Edit Course Title:</label>
                                        <input ref="editCourseTitle" class="form-control"
                                            placeholder="Intro To businesss" type="text">
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg mg-t-10 mg-lg-t-0">
                                        <label>Edit Course Description : </label>
                                        <textarea class="form-control"></textarea>
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg mg-t-10 mg-lg-t-0">
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" id="customFile">
                                            <label class="custom-file-label" for="customFile">Upload Banner</label>
                                        </div><!-- custom-file -->
                                    </div><!-- col -->
                                </div>
                                <div class="row mg-t-20">
                                    <div class="col-lg mg-t-10 mg-lg-t-0">
                                        <label>Edit Video Link :</label>
                                        <input ref="editCourseVideo" class="form-control"
                                            placeholder="Intro To businesss" type="text">
                                    </div><!-- col -->
                                </div><!-- row -->
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-primary">Create</button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div><!-- modal-dialog -->
                </div><!-- modal -->

                <!-- End Modal for create Course -->



            </div><!-- card -->
        </div><!-- col-6 -->
        <div v-if="!isFetchinContent" class="col-lg-6 mg-t-10 mg-lg-t-0">
            <div v-if="isCourseContent" class="card card-table">
                <div class="card-header">
                    <h6 class="slim-card-title">Course Content</h6>
                </div><!-- card-header -->
                <div class="table-responsive">
                    <table class="table mg-b-0 tx-13">
                        <thead>
                            <tr class="tx-10">
                                <th class="wd-10p pd-y-5">&nbsp;</th>
                                <th class="pd-y-5">Content Details</th>

                                <th class="pd-y-5">Video</th>
                                <th class="pd-y-5 tx-center">Actions</th>
                            </tr>
                        </thead>
                        <tbody>

                            <tr v-if="courseContent.length" v-for="cour in courseContent">
                                <td>{{cour.arrange}}</td>
                                <td>
                                    <a href="" class="tx-inverse tx-14 tx-medium d-block">{{cour.title}}</a>
                                    <span class="tx-11 d-block"><span
                                            class="square-8 bg-danger mg-r-5 rounded-circle"></span>
                                        {{cour.uuid.toUpperCase()}}</span>
                                    <p>

                                        Resourser Count :{{cour.resources.length}}
                                    </p>

                                </td>

                                <td class="pd-l-20">
                                    <a :href="cour.video" target="__blank"> <img :src="cour.banner.imageUrl"
                                            class="wd-55" alt="Image"></a>
                                </td>
                                <td class="valign-middle tx-center">
                                    <div class="row">
                                        <button @click="getCourseContent(cour.id)" class="btn btn-success btn-sm"><i
                                                class="fa fa-eye"></i></button>
                                        <button @click="removeCourseContent(cour.id)" class="btn btn-danger btn-sm"><i
                                                class="fa fa-trash"></i></button>
                                        <button @click="editCourse(cour.id)" ref="editContentButton" data-toggle="modal"
                                            data-target="#modalEditCourse" class="btn btn-sm btn-warning"> <i
                                                class="fa fa-edit"></i>
                                        </button>
                                    </div>
                                    <br>
                                    <div class="row">
                                        <button data-toggle="modal" @click="getResourse(cour.id)"
                                            data-target="#addResources" class="btn btn-sm btn-primary">Add
                                            Resources</button>
                                    </div>
                                </td>
                            </tr>



                        </tbody>
                    </table>
                </div><!-- table-responsive -->
                <div class="card-footer tx-12 pd-y-15 bg-transparent">
                    <button data-toggle="modal" data-target="#modalCreateContent" class="btn btn-sm btn-warning"
                        href=""><i class="fa fa-plus-down mg-r-5"></i>Create Content</a>
                </div><!-- card-footer -->
            </div><!-- card -->
        </div><!-- col-6 -->
        <div v-else class="col-md-6 col-xl-6 mg-t-30">
            <div class="d-flex bg-200 ht-300 pos-relative align-items-center">
                <div class="sk-folding-cube">
                    <div class="sk-cube1 sk-cube"></div>
                    <div class="sk-cube2 sk-cube"></div>
                    <div class="sk-cube4 sk-cube"></div>
                    <div class="sk-cube3 sk-cube"></div>
                </div>
            </div><!-- d-flex -->
        </div><!-- col-4 -->

        <div id="modalCreateContent" class="modal fade">
            <div class="modal-dialog modal-dialog-vertical-center" role="document">
                <div class="modal-content bd-0 tx-14">
                    <div class="modal-header">
                        <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold">Create Content</h6>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body pd-25">
                        <div class="row">
                            <div class="col-lg">
                                <label>Content ID:</label>
                                <input ref="contentId" class="form-control" placeholder="21" type="text">
                            </div><!-- col -->
                        </div>
                        <div class="row mg-t-20">
                            <div class="col-lg">
                                <label>Content Title:</label>
                                <input ref="contentTitle" class="form-control" placeholder="Intro To businesss"
                                    type="text">
                            </div><!-- col -->
                        </div>
                        <div class="row mg-t-20">
                            <div class="col-lg mg-t-10 mg-lg-t-0">
                                <label>Content Description : </label>
                                <textarea ref="contentDescription" class="form-control"></textarea>
                            </div><!-- col -->
                        </div>
                        <div class="row mg-t-20">
                            <div class="col-lg mg-t-10 mg-lg-t-0">
                                <div class="custom-file">
                                    <input type="file" ref="contentBanner" class="custom-file-input" id="customFile">
                                    <label class="custom-file-label" for="customFile">Upload Banner</label>
                                </div><!-- custom-file -->
                            </div><!-- col -->
                        </div>


                    </div>
                    <div class="modal-footer">
                        <button @click="createCourseContent()" type="button" class="btn btn-primary">Create</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Refresh</button>
                    </div>
                </div>
            </div><!-- modal-dialog -->
        </div><!-- modal -->



        <div id="addResources" class="modal fade">
            <div class="modal-dialog modal-dialog-vertical-center" role="document">
                <div class="modal-content bd-0 tx-14">
                    <div class="modal-header">
                        <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold">Reources Form </h6>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body pd-25">
                        <div class="table-responsive">
                            <div v-if="isFetchingResources">
                                <div class="d-flex bg-200 ht-300 pos-relative align-items-center">
                                    <div class="sk-folding-cube">
                                        <div class="sk-cube1 sk-cube"></div>
                                        <div class="sk-cube2 sk-cube"></div>
                                        <div class="sk-cube4 sk-cube"></div>
                                        <div class="sk-cube3 sk-cube"></div>
                                    </div>
                                </div><!-- d-flex -->

                            </div>
                            <table v-else class="table mg-b-0">

                                <tbody v-if="contentResources.length">
                                    <tr v-for="res in contentResources">

                                        <td><a :href="res.resourceFile.imageUrl"
                                                target="_blank">{{res.resourceTitle}}</a></td>
                                        <td><button @click="removeResource(res.id)" class="btn btn-sm"><i
                                                    class="fa fa-trash"></i></button></td>

                                    </tr>

                                </tbody>
                            </table>
                        </div><!-- table-responsive -->

                        <div class="row mg-t-20">
                            <div class="col-lg mg-t-10 mg-lg-t-0">
                                <label>Resource Title :</label>
                                <input ref="resourceTitle" class="form-control" placeholder="Intro To businesss"
                                    type="text">
                            </div><!-- col -->
                        </div><!-- row -->
                        <div class="row mg-t-20">
                            <div class="col-lg mg-t-10 mg-lg-t-0">
                                <div class="custom-file">
                                    <input type="file" ref="resourceFile" class="custom-file-input" id="customFile">
                                    <label class="custom-file-label" for="customFile">Upload Document</label>
                                </div><!-- custom-file -->
                            </div><!-- col -->
                        </div>


                    </div>
                    <div class="modal-footer">
                        <button :disabled="isCreatingResource" @click="createResources()" type="button"
                            class="btn btn-primary">Add Resource</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div><!-- modal-dialog -->
        </div><!-- modal -->





        <div id="addCourseResources" class="modal fade">
            <div class="modal-dialog modal-dialog-vertical-center" role="document">
                <div class="modal-content bd-0 tx-14">
                    <div class="modal-header">
                        <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold">Reources Form </h6>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body pd-25">
                        <div class="table-responsive">
                            <div v-if="isFetchingCResources">
                                <div class="d-flex bg-200 ht-300 pos-relative align-items-center">
                                    <div class="sk-folding-cube">
                                        <div class="sk-cube1 sk-cube"></div>
                                        <div class="sk-cube2 sk-cube"></div>
                                        <div class="sk-cube4 sk-cube"></div>
                                        <div class="sk-cube3 sk-cube"></div>
                                    </div>
                                </div><!-- d-flex -->

                            </div>
                            <table v-else class="table mg-b-0">

                                <tbody v-if="courseResources.length">
                                    <tr v-for="res in courseResources">

                                        <td><a :href="res.resourceFile.imageUrl"
                                                target="_blank">{{res.resourceTitle}}</a></td>
                                        <td><button @click="removeCourseResource(res.id)" class="btn btn-sm"><i
                                                    class="fa fa-trash"></i></button></td>

                                    </tr>

                                </tbody>
                            </table>
                        </div><!-- table-responsive -->

                        <div class="row mg-t-20">
                            <div class="col-lg mg-t-10 mg-lg-t-0">
                                <label>Resource Title :</label>
                                <input ref="resourceCTitle" class="form-control" placeholder="Intro To businesss"
                                    type="text">
                            </div><!-- col -->
                        </div><!-- row -->
                        <div class="row mg-t-20">
                            <div class="col-lg mg-t-10 mg-lg-t-0">
                                <div class="custom-file">
                                    <input type="file" ref="resourceCFile" class="custom-file-input" id="customFile">
                                    <label class="custom-file-label" for="customFile">Upload Document</label>
                                </div><!-- custom-file -->
                            </div><!-- col -->
                        </div>


                    </div>
                    <div class="modal-footer">
                        <button :disabled="isCreatingCResource" @click="createCourseResources()" type="button"
                            class="btn btn-primary">Add Resource</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div><!-- modal-dialog -->
        </div><!-- modal -->



        <div id="modalQuiz" class="modal fade">
            <div class="modal-dialog modal-dialog-vertical-center" role="document">
                <div class="modal-content bd-0 tx-14">
                    <div class="modal-header">
                        <h6 class="tx-14 mg-b-0 tx-uppercase tx-inverse tx-bold">Create Quiz</h6>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body pd-25">
                        <div class="card card-body">
                            <div class="row mg-t-20">
                                <div class="col-lg">
                                    <label>Question:</label>
                                    <textarea ref="quizQuestion" class="form-control"
                                        placeholder="Intro To businesss"></textarea>
                                </div><!-- col -->
                            </div>
                            <div v-if="quizAnwerList.length" class="row mg-t-20">
                                <div class="col-lg mg-t-10 mg-lg-t-0">
                                    <ul>
                                        <li v-for="(ans, index) in quizAnwerList">{{ans.text}} ({{ans.isAnswer}})
                                            <button @click="removeQuizAnswer(index)" class="btn btn-default"><i
                                                    class="fa fa-trash"></i></button>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                            <div class="row mg-t-20">

                                <div class="row mg-b-25">
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            <label class="form-control-label">Question Answer <span
                                                    class="tx-danger">*</span></label>
                                            <input class="form-control" type="text" ref="questionAnswer"
                                                placeholder="Enter firstname">
                                        </div>
                                    </div><!-- col-4 -->
                                    <div class="col-lg-4">
                                        <div class="form-group">
                                            <label class="form-control-label">Is Answer <span
                                                    class="tx-danger">*</span></label>
                                            <input class="form-control" type="checkbox" v-model="isAnswer">
                                        </div>
                                    </div><!-- col-4 -->
                                    <div class="col-lg-4">


                                        <button @click="addQuizAnswer()" class="btn btn-primary">Add Answer</button>

                                    </div><!-- col-4 -->


                                </div><!-- row -->


                            </div>



                        </div>
                    </div>
                    <div class="modal-footer">
                        <button @click="createQuiz()" :disabled="isCreatingQuiz" type="button"
                            class="btn btn-primary">Create</button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Refresh</button>
                    </div>
                </div>
            </div><!-- modal-dialog -->
        </div><!-- modal -->


    </div><!-- row -->

</div>
<script>
const editProgram = Vue.createApp({
    data() {
        return {
            activeProgram: "",
            isCourseContent: false,
            isFetchinContent: false,
            courseContent: [],
            activeCourse: 0,
            contentResources: [],
            isFetchingResources: false,
            activeCourseContent: "",
            isCreatingResource: false,

            courseResources: [],
            isFetchingCResources: false,
            activeCourse: "",
            isCreatingCResource: false,

            quizAnwerList: [],
            isAnswer: false,
            quizActiveCourse: "",
            isCreatingQuiz: false,
        }
    },


    methods: {

        createCourse() {
            this.isCreatingCourse = true;
            let fille = this.$refs.courseBanner.files[0];
            if (this.$refs.courseBanner.files.length == 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Empty Image',
                    text: "Image cannot be empty"
                });
            } else if (this.$refs.courseId.value == "" ||
                this.$refs.courseTitle.value == "" ||
                this.$refs.courseDescription.value == "" ||
                this.$refs.courseBanner.value == "") {

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'A required field is empty',

                });
            } else if (fille > 1024 * 1024 * 2) {
                Swal.fire({
                    icon: 'error',
                    title: 'Image size',
                    text: "Image file should notbe more than 2MB",

                });
                this.isSubmitting = false;
            } else {
                this.isCreatingCourse = false;


                let formData = new FormData();
                formData.append("id", this.$refs.courseId.value);
                formData.append("title", this.$refs.courseTitle.value);
                formData.append("description", this.$refs.courseDescription.value);
                formData.append("banner", fille);
                formData.append("video", this.$refs.courseVideo.value);
                formData.append("program", this.$refs.programId.value);

                axios.post("/admin/add-course", formData, {
                    headers: {
                        "Content-Type": "multipart/form-data"
                    }
                }).then(res => {
                    if (res.status == 201) {
                        window.location.reload();
                    }
                }).catch(err => {

                });
            }
        },


        getCourseDetails(id) {

        },

        editCourse(id) {

        },

        removeCourse(id) {
            Swal.fire({
                title: 'Are you sure you want to remove this course',
                text: "This action is irreversible ",
                showDenyButton: true,
                showCancelButton: true,
                confirmButtonText: 'Remove',
                denyButtonText: `ignore`,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    let formData = new FormData();
                    formData.append("key", id);
                    axios.post("/admin/remove-course", formData).then(res => {
                        if (res.status == 202) {
                            window.location.reload();
                        }
                    }).catch()
                }
            })
        },

        getCourseContent(id) {
            // alert(id);
            this.isCourseContent = true;
            this.isFetchinContent = true;
            this.activeCourse = id;
            axios.get(`/admin/get-course-content/${id}`).then(res => {
                if (res.status == 200) {
                    this.courseContent = res.data.data;
                    this.isFetchinContent = false;
                    this.isCourseContent = true;
                }
            }).catch(err => {

            });
        },

        createCourseContent() {
            this.isCreatingCourse = true;
            let fille = this.$refs.contentBanner.files[0];
            if (this.$refs.contentBanner.files.length == 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Empty Image',
                    text: "Image cannot be empty"
                });
            } else if (this.$refs.contentId.value == "" ||
                this.$refs.contentTitle.value == "" ||
                this.$refs.contentDescription.value == "" ||
                this.$refs.contentBanner.value == "" ||

                this.$refs.contentVideo.value == "") {

                Swal.fire({
                    icon: 'error',
                    title: 'Oops...',
                    text: 'A required field is empty',

                });
            } else if (fille > 1024 * 1024 * 2) {
                Swal.fire({
                    icon: 'error',
                    title: 'Image size',
                    text: "Image file should notbe more than 2MB",

                });
                this.isSubmitting = false;
            } else {
                this.isCreatingCourse = false;


                let formData = new FormData();
                formData.append("id", this.$refs.contentId.value);
                formData.append("title", this.$refs.contentTitle.value);
                formData.append("description", this.$refs.contentDescription.value);
                formData.append("snippetVideo", this.$refs.contentVideoSnippet.value);
                formData.append("banner", fille);
                formData.append("video", this.$refs.contentVideo.value);
                formData.append("course", this.activeCourse);

                axios.post("/admin/add-course-content", formData, {
                    headers: {
                        "Content-Type": "multipart/form-data"
                    }
                }).then(res => {
                    if (res.status == 201) {
                        window.location.reload();
                    }
                }).catch(err => {

                });
            }
        },

        editCourseContent() {

        },

        removeCourseContent(id) {
            Swal.fire({
                title: 'Are you sure you want to remove this course',
                text: "This action is irreversible ",
                showDenyButton: true,
                showCancelButton: true,
                confirmButtonText: 'Remove',
                denyButtonText: `ignore`,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    let formData = new FormData();
                    formData.append("key", id);
                    axios.post("/admin/remove-course-content", formData).then(res => {
                        if (res.status == 202) {
                            window.location.reload();
                        }
                    }).catch(err => {})
                }
            })

        },

        getResourse(courseContentId = "") {

            this.isFetchingResources = true;
            this.activeCourseContent = courseContentId;
            axios.get(`/admin/get-content-resources/${courseContentId}`).then((result) => {
                if (result.status == 200) {
                    this.isFetchingResources = false;
                    this.contentResources = result.data.data;
                }
            }).catch((err) => {
                Swal.fire({
                    icon: "error",
                    title: "An error occured",
                    text: err.response.data.message,
                });
            });
        },

        createResources() {
            if (this.$refs.resourceFile.files.length == 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Empty Image',
                    text: "Document cannot be empty"
                });
            } else if (this.activeCourseContent == "" || this.$refs.resourceTitle.value == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Empty Image',
                    text: "A required Field is empty"
                });
            } else {
                this.isCreatingResource = true;
                let formData = new FormData();
                formData.append("content_id", this.activeCourseContent);
                formData.append("title", this.$refs.resourceTitle.value);
                formData.append("file", this.$refs.resourceFile.files[0]);

                axios.post("/admin/add-content_resources", formData).then(res => {
                    if (res.status == 201) {
                        this.$refs.resourceTitle.value = "";
                        this.$refs.resourceFile.files[0] = "";
                        this.getResourse(this.activeCourseContent);
                        this.isCreatingResource = false;
                    }
                }).catch(err => {
                    Swal.fire({
                        icon: "error",
                        title: "An error occured",
                        text: err.response.data.message,
                    });
                    this.isCreatingResource = false;
                });
            }
        },

        removeResource(id) {
            Swal.fire({
                title: 'Are you sure you want to remove this resource',
                text: "This action is irreversible ",
                showDenyButton: true,
                showCancelButton: true,
                confirmButtonText: 'Remove',
                denyButtonText: `ignore`,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    let formData = new FormData();
                    formData.append("key", id);
                    axios.post(`/admin/remove-content-resouce/${id}`, formData).then(res => {
                        if (res.status == 202) {
                            this.getResourse(this.activeCourseContent)
                        }
                    }).catch(err => {})
                }
            })
        },



        // Course
        getCResourse(courseId = "") {

            this.isFetchingCResources = true;
            this.activeCourse = courseId;
            axios.get(`/admin/get-course-resources/${courseId}`).then((result) => {
                if (result.status == 200) {
                    this.isFetchingCResources = false;
                    this.courseResources = result.data.data;
                }
            }).catch((err) => {
                Swal.fire({
                    icon: "error",
                    title: "An error occured",
                    text: err.response.data.message,
                });
            });
        },

        createCourseResources() {
            if (this.$refs.resourceCFile.files.length == 0) {
                Swal.fire({
                    icon: 'error',
                    title: 'Empty Image',
                    text: "Document cannot be empty"
                });
            } else if (this.activeCourse == "" || this.$refs.resourceCTitle.value == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Empty Image',
                    text: "A required Field is empty"
                });
            } else {
                this.isCreatingCResource = true;
                let formData = new FormData();
                formData.append("course_id", this.activeCourse);
                formData.append("title", this.$refs.resourceCTitle.value);
                formData.append("file", this.$refs.resourceCFile.files[0]);

                axios.post("/admin/add-course-resources", formData).then(res => {
                    if (res.status == 201) {
                        this.$refs.resourceCTitle.value = "";
                        this.$refs.resourceCFile.files[0] = "";
                        this.getCResourse(this.activeCourse);
                        this.isCreatingCResource = false;
                    }
                }).catch(err => {
                    Swal.fire({
                        icon: "error",
                        title: "An error occured",
                        text: err.response.data.message,
                    });
                    this.isCreatingCResource = false;
                });
            }
        },

        removeCourseResource(id) {
            Swal.fire({
                title: 'Are you sure you want to remove this resource',
                text: "This action is irreversible ",
                showDenyButton: true,
                showCancelButton: true,
                confirmButtonText: 'Remove',
                denyButtonText: `ignore`,
            }).then((result) => {
                /* Read more about isConfirmed, isDenied below */
                if (result.isConfirmed) {
                    let formData = new FormData();
                    formData.append("key", id);
                    axios.post(`/admin/remove-course-resouce/${id}`, formData).then(res => {
                        if (res.status == 202) {
                            this.getResourse(this.activeCourseContent)
                        }
                    }).catch(err => {})
                }
            })
        },
        // Quiz

        newQuiz(id) {
            this.quizActiveCourse = id;
        },

        addQuizAnswer() {
            let answerObject = {
                "text": this.$refs.questionAnswer.value,
                "isAnswer": this.isAnswer
            };
            this.quizAnwerList.push(answerObject);
            this.$refs.questionAnswer.value = "";
            this.isAnswer = false;
            console.log(this.quizAnwerList);
        },

        removeQuizAnswer(index) {
            this.quizAnwerList.splice(index, 1);
        },


        createQuiz() {
            this.isCreatingQuiz = true;
            if (this.$refs.quizQuestion.value == "" || this.quizAnwerList.length == 0 || this
                .quizActiveCourse == "") {
                Swal.fire({
                    icon: 'error',
                    title: 'Requred field',
                    text: "A required Field is empty"
                })
                this.isCreatingQuiz = false;
            } else {
                let formData = new FormData();
                formData.append("question", this.$refs.quizQuestion.value);
                formData.append("answer", JSON.stringify(this.quizAnwerList));
                formData.append("course_id", this.quizActiveCourse);
                axios.post("/admin/create-quiz", formData).then((result) => {

                    if (result.status == 201) {
                        window.location.reload();
                        this.isCreatingQuiz = false;
                    }
                }).catch((err) => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error',
                        text: "An error occured"
                    });
                    this.isCreatingQuiz = false;
                });
            }
        }



    },
});
editProgramm = editProgram.mount("#editProgram");
//https://www.youtube.com/embed/m-2PRSl8jQk
</script>