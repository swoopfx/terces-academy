<?php echo $this->headtitle("Send Money Begin"); ?>

<div class="row">
</div>


<div id="bsm" class="row">
    <div class="col-12">
        <div class="multisteps-form mb-5">
            <!--progress bar-->
            <div class="row">
                <div class="col-12 col-lg-8 mx-auto my-5">
                    <div class="multisteps-form__progress">

                    </div>
                </div>
            </div>
            <!--form panels-->
            <div class="row">
                <div class="col-12 col-lg-8 m-auto">
                    <form class="multisteps-form__form mb-8">
                        <!--single form panel-->
                        <div class="card multisteps-form__panel p-3 border-radius-xl bg-white js-active" data-animation="FadeIn">
                            <!--  <h5 class="font-weight-bolder mb-0">About me</h5>-->
                            <p class="mb-0 text-sm">Mandatory informations </p>
                            <div class="multisteps-form__content">
                                <div class="row mt-3">
                                    <div class="col-12 col-sm-6">
                                        <label>Receiver Fullname</label>
                                        <input class="multisteps-form__input form-control" type="text" v-model="receiverFullname" placeholder="Michael Smith" />
                                    </div>
                                    <div class="col-12 col-sm-6 mt-3 mt-sm-0" v-if="sendMoneyService.length">
                                        <label>Service Type</label>
                                        <select class="multisteps-form__input form-control" v-model="selectedServiceType" @change="onChangeServiceType">
                                            <option v-for="serv in sendMoneyService" :value="serv.id">{{serv.service}}</option>
                                        </select>

                                    </div>
                                </div>
                                <div class="row mt-3">
                                    <div class="col-12 col-sm-6">
                                        <label>Receiver Fullname</label>
                                        <input class="multisteps-form__input form-control" type="text" v-model="receiverFullname" placeholder="Michael Smith" />
                                    </div>
                                    <div class="col-12 col-sm-6 mt-3 mt-sm-0" v-if="sendMoneyService.length">
                                        <label>Service Type</label>
                                        <select class="multisteps-form__input form-control" v-model="selectedServiceType" @change="onChangeServiceType">
                                            <option v-for="serv in sendMoneyService" :value="serv.id">{{serv.service}}</option>
                                        </select>

                                    </div>
                                </div>
                                <div v-if="isInterac" class="row mt-3">
                                    <div class="col-12 col-sm-6">
                                        <label>Recipient Interac Email</label>
                                        <input class="multisteps-form__input form-control" v-model="recipientInteracEmail" type="email" placeholder="abc@xyz.com" />
                                    </div>
                                    <!--    <div class="col-12 col-sm-6 mt-3 mt-sm-0">
                                        <label>Email Address</label>
                                        <input class="multisteps-form__input form-control" type="email" placeholder="eg. soft@dashboard.com" />
                                    </div> -->
                                </div>
                                <div v-if="isBank" class="row mt-3">
                                    <div class="col-12 col-sm-6" v-if="canadianBanks.length">
                                        <label>Canadian Bank</label>
                                        <select class="multisteps-form__input form-control" v-model="selectedBankName">
                                            <option v-for="serv in canadianBanks" :value="serv.id">{{serv.bankName}}</option>
                                        </select>
                                    </div>
                                    <div class="col-12 col-sm-6 mt-3 mt-sm-0">
                                        <label>Account Number</label>
                                        <input class="multisteps-form__input form-control" type="text" v-model="customerAccountNumber" placeholder="1234567*" />
                                    </div>
                                </div>
                                <div v-if="submitting" class="button-row d-flex mt-4">
                                    <i class="fa fa-spinner" aria-hidden="true"></i>
                                </div>
                                <div v-else class="button-row d-flex mt-4">
                                    <button class="btn bg-gradient-dark ms-auto mb-0 js-btn-next" type="button" @click="hydrateSend()" title="Next">Begin Payment</button>
                                </div>
                            </div>
                        </div>

                    </form>
                </div>
            </div>
        </div>
    </div>
</div>



<script>
    const bsm = Vue.createApp({
        data() {
            return {
                submitting: false,
                sender: "",
                receiverFullname: "",
                sendMoneyService: [],
                canadianBanks: [],
                recipientInteracEmail: [],
                isBank: false,
                isInterac: false,
                selectedServiceType: "",
                selectedBankName: "",
                customerAccountNumber: "",
                isError: false
            }
        },
        mounted() {
            this.getSendMoneySservice();
            this.getCanadianBanks();
        },
        methods: {
            validation() {
                this.isError = false;
                if (this.receiverFullname == "") {
                    this.submitting = false;
                    Swal.fire({
                        icon: "error",
                        title: "Validation Error",
                        text: "A required field is empty"
                    });
                }
                if (this.isInterac) {
                    this.submitting = false;
                    if (this.recipientInteracEmail == "") {
                        this.isError = true;
                        Swal.fire({
                            icon: "error",
                            title: "Validation Error",
                            text: "Recipient Interac Email is required"
                        });
                    }
                } else if (this.isBank) {
                    this.submitting = false;
                    if (this.selectedBankName == "" || this.customerAccountNumber == "") {
                        this.isError = true;
                        Swal.fire({
                            icon: "error",
                            title: "Validation Error",
                            text: "A required field is empty"
                        });
                    }
                }
            },

            onChangeServiceType(e) {
                this.isInterac = false;
                this.isBank = false;

                if (e.target.value == 100) {
                    this.isInterac = true;
                } else if (e.target.value == 200) {
                    this.isBank = true;
                } else {
                    this.isInterac = false;
                    this.isBank = false;
                }
            },
            getSendMoneySservice() {
                axios.get("/sendmoney/get-send-money-service").then((result) => {
                    if (result.status == 200) {
                        this.sendMoneyService = result.data.data;
                    }
                }).catch((err) => {

                });
            },

            getCanadianBanks() {
                axios.get("/sendmoney/get-canadian-banks").then((result) => {
                    if (result.status == 200) {
                        this.canadianBanks = result.data.data;
                    }
                }).catch((err) => {

                });
            },

            hydrateSend() {
                this.submitting = true;
                this.validation();
                if (!this.isError) {
                    let formData = new FormData();
                    formData.append("recipientFullname", this.receiverFullname);
                    formData.append("recipientService", this.selectedServiceType);
                    formData.append("recipientInteracEmail", this.recipientInteracEmail);
                    formData.append("canadianBank", this.selectedBankName);
                    formData.append("accountNumber", this.selectedBankName);
                    axios.post("/sendmoney/send-money-begin", formData).then((result) => {
                        if (result.status == 202) {
                            window.location.href = "/sendmoney/send-money-finalize"
                        }
                    }).catch((err) => {

                    });
                }
            }
        },
    });
    bsm.mount("#bsm");
</script>